<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DisplayName" xml:space="preserve">
    <value>Company Documents</value>
  </data>
  <data name="CoverTitle" xml:space="preserve">
    <value>Company Documents</value>
  </data>
  <data name="CoverDescription" xml:space="preserve">
    <value>Module is designed to automate management of orders and regulatory documents.</value>
  </data>
  <data name="CoverGroup_LNA" xml:space="preserve">
    <value>Company Regulations</value>
  </data>
  <data name="CoverAction_CreateDocument" xml:space="preserve">
    <value>Create Document</value>
  </data>
  <data name="CoverDescription_CreateDocument" xml:space="preserve">
    <value>Quickly create a document.</value>
  </data>
  <data name="CoverAction_OpenOrders" xml:space="preserve">
    <value>Order Register</value>
  </data>
  <data name="CoverDescription_OpenOrders" xml:space="preserve">
    <value>Register contains the list of orders.</value>
  </data>
  <data name="CoverAction_OpenRegulatoryDocuments" xml:space="preserve">
    <value>Regulatory Document Register</value>
  </data>
  <data name="CoverDescription_OpenRegulatoryDocuments" xml:space="preserve">
    <value>Register contains the list of all regulatory documents.</value>
  </data>
  <data name="CoverGroup_LinkedInformation" xml:space="preserve">
    <value>Related Information</value>
  </data>
  <data name="CoverAction_OpenBPGroups" xml:space="preserve">
    <value>Groups of Business Processes</value>
  </data>
  <data name="CoverDescription_OpenBPGroups" xml:space="preserve">
    <value>Stores information about groups of business processes.</value>
  </data>
  <data name="CoverAction_OpenOrderSubjects" xml:space="preserve">
    <value>Order Subjects</value>
  </data>
  <data name="CoverDescription_OpenOrderSubjects" xml:space="preserve">
    <value>Stores information about order subjects.</value>
  </data>
  <data name="CoverAction_OpenStandardForms" xml:space="preserve">
    <value>Standard Forms</value>
  </data>
  <data name="CoverDescription_OpenStandardForms" xml:space="preserve">
    <value>Stores information about standard forms.</value>
  </data>
  <data name="CoverAction_OpenAcquaintanceList" xml:space="preserve">
    <value>Acquaintance Lists</value>
  </data>
  <data name="CoverDescription_OpenAcquaintanceList" xml:space="preserve">
    <value>Stores information about employees to be acquainted with documents.</value>
  </data>
  <data name="CoverAction_OpenRiskLevels" xml:space="preserve">
    <value>Risk Levels</value>
  </data>
  <data name="CoverDescription_OpenRiskLevels" xml:space="preserve">
    <value>Stores information about risk levels.</value>
  </data>
  <data name="JobDisplayName_8fe597ca3599409fa40dedf762766664" xml:space="preserve">
    <value>Change Order State</value>
  </data>
  <data name="JobDescription_8fe597ca3599409fa40dedf762766664" xml:space="preserve">
    <value>When the cancellation date comes, the "Obsolete" status will be automatically set to an order and a regulatory document.</value>
  </data>
  <data name="JobDisplayName_12e6b47303e8497791850e80061c9388" xml:space="preserve">
    <value>Approval Task Relevance</value>
  </data>
  <data name="JobDescription_12e6b47303e8497791850e80061c9388" xml:space="preserve">
    <value>Keep track of the document rework time and send a notice to an assignee.</value>
  </data>
  <data name="JobDisplayName_a3baf24f70b3441ebf3d5f39f7693a1c" xml:space="preserve">
    <value>Extend Approval Deadline</value>
  </data>
  <data name="JobDescription_a3baf24f70b3441ebf3d5f39f7693a1c" xml:space="preserve">
    <value>Extend the deadline of document approval in case the deadline extension request was sent to the approval initiator.</value>
  </data>
  <data name="JobDisplayName_b44328f381e24b27bc703a771ca5c62b" xml:space="preserve">
    <value>Relevance of Request to Initiator</value>
  </data>
  <data name="JobDescription_b44328f381e24b27bc703a771ca5c62b" xml:space="preserve">
    <value>Keep track of the time an assignee took to answer a request within a company regulation approval task.</value>
  </data>
  <data name="CoverAction_AllIncomingDocuments" xml:space="preserve">
    <value>Incoming Letters</value>
  </data>
  <data name="CoverDescription_AllIncomingDocuments" xml:space="preserve">
    <value>Register contains the list of incoming letters.</value>
  </data>
  <data name="CoverGroup_CompanyDocuments" xml:space="preserve">
    <value>Company Documents</value>
  </data>
  <data name="CoverAction_OutgoingLetters" xml:space="preserve">
    <value>Outgoing Letters</value>
  </data>
  <data name="CoverDescription_OutgoingLetters" xml:space="preserve">
    <value>Register contains the list of outgoing letters.</value>
  </data>
  <data name="CoverAction_Memo" xml:space="preserve">
    <value>Memos</value>
  </data>
  <data name="CoverDescription_Memo" xml:space="preserve">
    <value>Register contains the list of memos.</value>
  </data>
  <data name="CoverGroup_Reports" xml:space="preserve">
    <value>Reports</value>
  </data>
  <data name="CoverAction_DocumntsTaxGroup" xml:space="preserve">
    <value>Register of Tax Group Documents</value>
  </data>
  <data name="CoverDescription_DocumntsTaxGroup" xml:space="preserve">
    <value>List of incoming documents for the tax group.</value>
  </data>
  <data name="CoverAction_IncomingDocemntsReport" xml:space="preserve">
    <value>Incoming Document Register</value>
  </data>
  <data name="CoverDescription_IncomingDocemntsReport" xml:space="preserve">
    <value>List of incoming documents registered within a specified period.</value>
  </data>
  <data name="CoverAction_DocumentApprovalStatisticsReport" xml:space="preserve">
    <value>Document Approval Statistics</value>
  </data>
  <data name="CoverDescription_DocumentApprovalStatisticsReport" xml:space="preserve">
    <value />
  </data>
  <data name="CoverAction_DistributionList" xml:space="preserve">
    <value>Distribution Lists</value>
  </data>
  <data name="CoverDescription_DistributionList" xml:space="preserve">
    <value>Distribution lists of the outgoing letters.</value>
  </data>
  <data name="CoverAction_ApproversWorkStatisticsReport" xml:space="preserve">
    <value>TODO</value>
  </data>
  <data name="CoverDescription_ApproversWorkStatisticsReport" xml:space="preserve">
    <value />
  </data>
</root>