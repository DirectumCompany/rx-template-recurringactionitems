<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ValueMustBePositive" xml:space="preserve">
    <value>Value must be positive</value>
  </data>
  <data name="ArchiveResponsibleRoleName" xml:space="preserve">
    <value>Employee responsible for counterparties document archive</value>
  </data>
  <data name="SecurityServiceRoleName" xml:space="preserve">
    <value>Security Department employees</value>
  </data>
  <data name="ArchiveResponsibleRoleDescription" xml:space="preserve">
    <value>Employee that can include counterparty documents in the file and select "Original documents submitted" checkbox</value>
  </data>
  <data name="SecurityServiceRoleDescription" xml:space="preserve">
    <value>Employees that have access to "Security Department comment" field in counterparty card, can generate specialized Security Department report and manage stop lists</value>
  </data>
  <data name="KsssResponsibleRoleDescription" xml:space="preserve">
    <value>Employees that can import and export companies from the IBM MDM system.</value>
  </data>
  <data name="KsssResponsibleRoleName" xml:space="preserve">
    <value>Employee responsible for IBM MDM</value>
  </data>
  <data name="ComplianceSpecialistRoleName" xml:space="preserve">
    <value>Compliance officer</value>
  </data>
  <data name="ComplianceSpecialistRoleDescription" xml:space="preserve">
    <value>Employee that can select "Sanctions" checkbox in the counterparty card.</value>
  </data>
  <data name="ClientServiceManagerRoleName" xml:space="preserve">
    <value>Client Service manager</value>
  </data>
  <data name="ClientServiceManagerRoleDescription" xml:space="preserve">
    <value>Client Service manager.</value>
  </data>
  <data name="ServiceTreasuryDepartmentRoleName" xml:space="preserve">
    <value>Treasury Department employee</value>
  </data>
  <data name="ServiceTreasuryDepartmentRoleDescription" xml:space="preserve">
    <value>Treasury Department employee.</value>
  </data>
  <data name="ServiceECDRoleName" xml:space="preserve">
    <value>Unified Document Management Center employee</value>
  </data>
  <data name="ServiceECDRoleDescription" xml:space="preserve">
    <value>Unified Document Management Center employee that manages the stop list.</value>
  </data>
  <data name="CounterpartiesModuleRoleName" xml:space="preserve">
    <value>Employees responsible for configuring "Counterparties" module</value>
  </data>
  <data name="CounterpartiesModuleRoleDescription" xml:space="preserve">
    <value>Employees that have full access to databooks of "Counterparties" module.</value>
  </data>
  <data name="RevisionRequestTypeName" xml:space="preserve">
    <value>Counterparty check request</value>
  </data>
  <data name="SecurityReportDialogTitle" xml:space="preserve">
    <value>Security Department Checks Report</value>
  </data>
  <data name="SecurityReportCounterpartyFieldTitle" xml:space="preserve">
    <value>Counterparty</value>
  </data>
  <data name="SecurityReportCheckinkResultFieldTitle" xml:space="preserve">
    <value>Check result</value>
  </data>
  <data name="SecurityReportPeriodFromFieldTitle" xml:space="preserve">
    <value>Checking from</value>
  </data>
  <data name="SecurityReportPeriodToFieldTitle" xml:space="preserve">
    <value>Checking to</value>
  </data>
  <data name="VerificationReminderText" xml:space="preserve">
    <value>Last check validity period for counterparty {0} expires in 30 days.</value>
  </data>
  <data name="VerificationReminderSubject" xml:space="preserve">
    <value>New check required for counterparty {0}</value>
  </data>
  <data name="TransferringOriginalsSubject" xml:space="preserve">
    <value>Submit original documents to archive by request {0}</value>
  </data>
  <data name="NotRightsForReport" xml:space="preserve">
    <value>You do not have rights to generate this report</value>
  </data>
  <data name="CounterpartyInformationKind" xml:space="preserve">
    <value>Counterparty dossier</value>
  </data>
  <data name="DocumentControlTaskName" xml:space="preserve">
    <value>These employees do not submit original documents to Security Department archive</value>
  </data>
  <data name="DocumentControlException" xml:space="preserve">
    <value>An error occurred during report generation</value>
  </data>
  <data name="CEONoticeTitle" xml:space="preserve">
    <value>All documents on counterparties check are submitted to Security Department archive</value>
  </data>
  <data name="SpecialFieldsRoleName" xml:space="preserve">
    <value>Employees that can complete special fields in counterparty card</value>
  </data>
  <data name="SpecialFieldsRoleDescription" xml:space="preserve">
    <value>Employees that can fill in "Check type" and "Strategic partner" fields in counterparty card.</value>
  </data>
  <data name="StopListNoticeRoleName" xml:space="preserve">
    <value>Employees that can receive notices upon stop list modification</value>
  </data>
  <data name="StopListNoticeRoleDescription" xml:space="preserve">
    <value>Employees that will receive notices when a counterparty is added or removed from stop list.</value>
  </data>
  <data name="CEOReportAssigneeRoleName" xml:space="preserve">
    <value>Task performer reporting to CEO</value>
  </data>
  <data name="CEOReportAssigneeRoleDescription" xml:space="preserve">
    <value>Task performer reporting to CEO.</value>
  </data>
</root>
