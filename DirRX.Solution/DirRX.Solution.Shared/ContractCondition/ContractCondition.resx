<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IsNotValidKindDocument" xml:space="preserve">
    <value>Cannot calculate the condition. The document to be sent is of the wrong kind.</value>
  </data>
  <data name="CounterpartyStatusIs" xml:space="preserve">
    <value>Is counterparty status {0}?</value>
  </data>
  <data name="CounterpartyStatusOther" xml:space="preserve">
    <value>Other counterparty status</value>
  </data>
  <data name="IsLlcGroupConditionName" xml:space="preserve">
    <value>Is counterparty a part of LUKOIL Group?</value>
  </data>
  <data name="IsLlcGroupConditionNegationName" xml:space="preserve">
    <value>Is counterparty not a part of LUKOIL Group?</value>
  </data>
  <data name="UrgentContractConditionName" xml:space="preserve">
    <value>Is approval urgent?</value>
  </data>
  <data name="FirstSignCPartyConditionName" xml:space="preserve">
    <value>Does counterparty sign first?</value>
  </data>
  <data name="CPartySignsScanConditionName" xml:space="preserve">
    <value>Does counterparty sign a scanned copy?</value>
  </data>
  <data name="SubcategoryConditionName" xml:space="preserve">
    <value>Is this additional document condition: {0}?</value>
  </data>
  <data name="FunctionalityConditionName" xml:space="preserve">
    <value>Is contract feature {0}?</value>
  </data>
  <data name="DocsProvidedConditionName" xml:space="preserve">
    <value>Have documents been provided?</value>
  </data>
  <data name="UrgentContractConditionNegationName" xml:space="preserve">
    <value>Contract is not urgent</value>
  </data>
  <data name="FirstSignCPartyConditionNegationName" xml:space="preserve">
    <value>Counterparty does not sign first</value>
  </data>
  <data name="CPartySignsScanConditionNegationName" xml:space="preserve">
    <value>Counterparty does not sign a scanned copy</value>
  </data>
  <data name="SubcategoryConditionNegationName" xml:space="preserve">
    <value>Additional document condition is not {0}</value>
  </data>
  <data name="FunctionalityConditionNegationName" xml:space="preserve">
    <value>Contract feature is not {0}</value>
  </data>
  <data name="DocsProvidedConditionNegationName" xml:space="preserve">
    <value>Documents are not provided</value>
  </data>
  <data name="InvalidLeadingDocument" xml:space="preserve">
    <value>Cannot calculate the condition. The underlying document is missing.</value>
  </data>
  <data name="YearCountValueCheck" xml:space="preserve">
    <value>The value must be positive</value>
  </data>
  <data name="YearCountGreaterOrEqualSingleName" xml:space="preserve">
    <value>Is overall term of the contract and suppl. agreement not less than {0} year (incl. open-end)?</value>
  </data>
  <data name="YearCountGreaterOrEqualName" xml:space="preserve">
    <value>Is overall term of the contract and suppl. agreement not less than {0} years (incl. open-end)?</value>
  </data>
  <data name="YearCountGreaterThanSingleName" xml:space="preserve">
    <value>Is overall term of the contract and suppl. agreement more than {0} year (incl. open-end)?</value>
  </data>
  <data name="YearCountGreaterThanName" xml:space="preserve">
    <value>Is overall term of the contract and suppl. agreement more than {0} years (incl. open-end)?</value>
  </data>
  <data name="YearCountLessThanSingleName" xml:space="preserve">
    <value>Is overall term of the contract and suppl. agreement less than {0} year (incl. open-end)?</value>
  </data>
  <data name="YearCountLessThanName" xml:space="preserve">
    <value>Is overall term of the contract and suppl. agreement less than {0} years (incl. open-end)?</value>
  </data>
  <data name="YearCountLessOrEqualSingleName" xml:space="preserve">
    <value>Is overall term of the contract and suppl. agreement not more than {0} year (incl. open-end)?</value>
  </data>
  <data name="YearCountLessOrEqualName" xml:space="preserve">
    <value>Is overall term of the contract and suppl. agreement not more than {0} years (incl. open-end)? </value>
  </data>
  <data name="CorpApproveName" xml:space="preserve">
    <value>Is corporate approval required?</value>
  </data>
  <data name="CopyActivationName" xml:space="preserve">
    <value>Is activation performed with scan copies?</value>
  </data>
  <data name="AnalysisRequiredName" xml:space="preserve">
    <value>Is IFRS 16 attribute analysis required?</value>
  </data>
  <data name="YearCountGreaterOrEqualSingleNegName" xml:space="preserve">
    <value>Overall term of the contract and suppl. agreement is less than {0} year (incl. open-end)</value>
  </data>
  <data name="YearCountGreaterOrEqualNegName" xml:space="preserve">
    <value>Overall term of the contract and suppl. agreement is less than {0} years (incl. open-end)</value>
  </data>
  <data name="YearCountGreaterThanSingleNegName" xml:space="preserve">
    <value>Overall term of the contract and suppl. agreement is not more than {0} year (incl. open-end)</value>
  </data>
  <data name="YearCountLessThanSingleNegName" xml:space="preserve">
    <value>Overall term of the contract and suppl. agreement is not less than {0} year (incl. open-end)</value>
  </data>
  <data name="YearCountLessOrEqualSingleNegName" xml:space="preserve">
    <value>Overall term of the contract and suppl. agreement is more than {0} year (incl. open-end)</value>
  </data>
  <data name="YearCountLessOrEqualNegName" xml:space="preserve">
    <value>Overall term of the contract and suppl. agreement is more than {0} years (incl. open-end)</value>
  </data>
  <data name="YearCountLessThanNegName" xml:space="preserve">
    <value>Overall term of the contract and suppl. agreement is not less than {0} years (incl. open-end)</value>
  </data>
  <data name="YearCountGreaterThanNegName" xml:space="preserve">
    <value>Overall term of the contract and suppl. agreement is not more than {0} years (incl. open-end)</value>
  </data>
  <data name="CorpApproveNegName" xml:space="preserve">
    <value>Corporate approval not required</value>
  </data>
  <data name="CopyActivationNegName" xml:space="preserve">
    <value>Activation with original documents</value>
  </data>
  <data name="AnalysisRequiredNegName" xml:space="preserve">
    <value>IFRS 16 attribute analysis is not required</value>
  </data>
  <data name="IsCountryDisputedConditionName" xml:space="preserve">
    <value>Is destination/delivery country in the list of territorial disputes?</value>
  </data>
  <data name="IsCountryDisputedNegationName" xml:space="preserve">
    <value>Not one of destination/delivery countries is in the list of territorial disputes</value>
  </data>
  <data name="IsTermlessContrConditionName" xml:space="preserve">
    <value>Is it an open-end contract?</value>
  </data>
  <data name="IsTermlessContrConditionNegationName" xml:space="preserve">
    <value>Contract is not an open-end one</value>
  </data>
  <data name="CounterpartySanctionsConditionName" xml:space="preserve">
    <value>Is counterparty sanctioned?</value>
  </data>
  <data name="CounterpartySanctionsNegationName" xml:space="preserve">
    <value>Counterparty is not sanctioned</value>
  </data>
  <data name="HolderTZThirdConditionName" xml:space="preserve">
    <value>Is trademark right holder a third party?</value>
  </data>
  <data name="HolderTZThirdNegationName" xml:space="preserve">
    <value>Trademark right holder is not a third party</value>
  </data>
  <data name="PrevStgRisksLvlNegName" xml:space="preserve">
    <value>Risks with the following levels are not defined on the previous stage: {0}</value>
  </data>
  <data name="PrevStgRisksLvlName" xml:space="preserve">
    <value>Risks with level {0} are defined on the previous stage</value>
  </data>
  <data name="AdviseCountryNegationName" xml:space="preserve">
    <value>Delivery countries are not in the list of recommended</value>
  </data>
  <data name="LukoilApprovedNegationName" xml:space="preserve">
    <value>Approval by LUKOIL PJSC not required</value>
  </data>
  <data name="AdviseCountryConditionName" xml:space="preserve">
    <value>Are delivery countries in the list of recommended?</value>
  </data>
  <data name="LukoilApprovedConditionName" xml:space="preserve">
    <value>Is approval by LUKOIL PJSC required?</value>
  </data>
  <data name="CurAmountIsMoreConditionName" xml:space="preserve">
    <value>Is document amount {0} {1} {2}?</value>
  </data>
  <data name="BalancePercentConditionName" xml:space="preserve">
    <value>Document amount is ≥ {0}% of book value of assets</value>
  </data>
  <data name="CurAmountIsMoreConditionNegationName" xml:space="preserve">
    <value>Is document amount not {0} {1} {2}?</value>
  </data>
  <data name="BalancePercentConditionNegationName" xml:space="preserve">
    <value>Document amount is less than {0}% of book value of assets</value>
  </data>
  <data name="TenderTypeConditionName" xml:space="preserve">
    <value>TODO</value>
  </data>
  <data name="TenderTypeConditionNegationName" xml:space="preserve">
    <value>TODO</value>
  </data>
  <data name="IsNotValidCounterpartyStatus" xml:space="preserve">
    <value>Cannot calculate the condition. Cannot calculate counterparty status.</value>
  </data>
</root>