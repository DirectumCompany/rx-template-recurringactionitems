<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreateFromTemplate" xml:space="preserve">
    <value>Select Standard Form</value>
  </data>
  <data name="StandardForm" xml:space="preserve">
    <value>Standard form</value>
  </data>
  <data name="RecommendedForm" xml:space="preserve">
    <value>Recommended form</value>
  </data>
  <data name="NoTemplate" xml:space="preserve">
    <value>No template is set for this form.</value>
  </data>
  <data name="OpenProductNameHint" xml:space="preserve">
    <value>Check trademark names by clicking on the link:</value>
  </data>
  <data name="PositiveAmount" xml:space="preserve">
    <value>The amount must be positive.</value>
  </data>
  <data name="CurrentAmount" xml:space="preserve">
    <value>Contract total amount: {0}</value>
  </data>
  <data name="SelectedContractsSetStateOnSigningSuccessfully" xml:space="preserve">
    <value>Submission of original documents for signing is successfully registered for all selected documents</value>
  </data>
  <data name="SelectedContractsSetStateOnSigningPartially" xml:space="preserve">
    <value>Submission of original documents for signing is successfully registered for {0} of {1} selected documents</value>
  </data>
  <data name="LockedContractErrorMessage" xml:space="preserve">
    <value>Cannot register submission of the original document {0} for signing. The document is locked by user {1}: {2}</value>
  </data>
  <data name="ContractAssigmentNotFound" xml:space="preserve">
    <value>Cannot specify the signing result for document {0}. No assignments to sign the document are found.</value>
  </data>
  <data name="ContractAssigmentIsLockedMessage" xml:space="preserve">
    <value>Cannot specify the signing result for document {0}. The assignment to sign the document is locked by user: {1}: {2}.</value>
  </data>
  <data name="SelectedContractsSetStateSignedSuccessfully" xml:space="preserve">
    <value>Signing result "Signed" is successfully registered for all selected documents</value>
  </data>
  <data name="SelectedContractsSetStateSignedPartially" xml:space="preserve">
    <value>Signing result "Signed" is successfully registered for {0} of {1} selected documents</value>
  </data>
  <data name="SelectedContractsSetStateNotSignedSuccessfully" xml:space="preserve">
    <value>Signing result "Not signed" is successfully registered for all selected documents</value>
  </data>
  <data name="SelectedContractsSetStateNotSignedPartially" xml:space="preserve">
    <value>Signing result "Not signed" is successfully registered for {0} of {1} selected documents</value>
  </data>
  <data name="ApprovalCheckReturnAssignmentCompleted" xml:space="preserve">
    <value>Assignment to check document return is completed with result "{0}"</value>
  </data>
  <data name="Sign" xml:space="preserve">
    <value>Signed</value>
  </data>
  <data name="NotSign" xml:space="preserve">
    <value>Not signed</value>
  </data>
  <data name="NotFoundApprovalCheckReturnAssignments" xml:space="preserve">
    <value>No assignments to check document return are found for document.</value>
  </data>
  <data name="CheckReturn" xml:space="preserve">
    <value>Return control</value>
  </data>
  <data name="DocumentReturned" xml:space="preserve">
    <value>Document returned</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="ApprovalResult" xml:space="preserve">
    <value>Result of document approval by counterparty:</value>
  </data>
  <data name="SendForApprovalCheckSumMessage" xml:space="preserve">
    <value>Specify the amount of the document to initiate rule-based approval.</value>
  </data>
  <data name="IsTenderChanged" xml:space="preserve">
    <value>Create a new version of the document to update the list of required documents.</value>
  </data>
  <data name="DocumentSummaryAmountUSDName" xml:space="preserve">
    <value>Amount of the document under approval (USD)</value>
  </data>
  <data name="DocumentSummaryMaxAmountName" xml:space="preserve">
    <value>Contract amount exceeds {0} {1}</value>
  </data>
  <data name="DocumentSummaryIsTermlessName" xml:space="preserve">
    <value>Open-end contract</value>
  </data>
  <data name="DocumentSummaryCountriesName" xml:space="preserve">
    <value>Countries included in the list of territorial disputes</value>
  </data>
  <data name="CounterpartyState" xml:space="preserve">
    <value>Counterparty status: {0}</value>
  </data>
  <data name="WrongContractCodeCountMessage" xml:space="preserve">
    <value>Specify a single MIS LLK contract kind code for the specified contract feature.</value>
  </data>
  <data name="SelectedContractsSetStateCounterpartySignedSuccessfully" xml:space="preserve">
    <value>Result of signing by counterparty is successfully registered for all selected documents</value>
  </data>
  <data name="SelectedContractsSetStateCounterpartySignedPartially" xml:space="preserve">
    <value>Result of signing by counterparty is successfully registered for {0} of {1} selected documents</value>
  </data>
  <data name="CreateFromRecommendedForm" xml:space="preserve">
    <value>Select Recommended Form</value>
  </data>
  <data name="SelectedContractsSetStateOnSigningCopySuccessfully" xml:space="preserve">
    <value>Submission of scanned copies for signing is successfully registered for all selected documents</value>
  </data>
  <data name="SelectedContractsSetStateOnSigningCopyPartially" xml:space="preserve">
    <value>Submission of scanned copies for signing is successfully registered for {0} of {1} selected documents</value>
  </data>
  <data name="SelectedContractsRemoveStateOnSigningCopySuccessfully" xml:space="preserve">
    <value>Submission of scanned copies for signing is successfully canceled for all selected documents</value>
  </data>
  <data name="SelectedContractsRemoveStateOnSigningCopyPartially" xml:space="preserve">
    <value>Submission of scanned copies for signing is successfully canceled for {0} of {1} selected documents</value>
  </data>
  <data name="SelectedContractsChangeStateSignedCopySuccessfully" xml:space="preserve">
    <value>Result of signing scanned copies is successfully registered for all selected documents</value>
  </data>
  <data name="SelectedContractsChangeStateSignedCopyPartially" xml:space="preserve">
    <value>Result of signing scanned copies is successfully registered for {0} of {1} selected documents</value>
  </data>
  <data name="SelectedContractsCancelStateOnSigningSuccessfully" xml:space="preserve">
    <value>Submission of document originals for signing is successfully canceled for all selected documents</value>
  </data>
  <data name="SelectedContractsCancelStateOnSigningPartially" xml:space="preserve">
    <value>Submission of document originals for signing is successfully canceled for {0} of {1} selected documents</value>
  </data>
  <data name="FillCounterpartiesListOnTab" xml:space="preserve">
    <value>Fill in the list on the "Counterparties" tab.</value>
  </data>
  <data name="ChangeManyCounterpartiesQuestion" xml:space="preserve">
    <value>Are you sure you want to switch to single counterparty mode?</value>
  </data>
  <data name="ChangeManyCounterpartiesDescription" xml:space="preserve">
    <value>All counterparties will be removed from the list.</value>
  </data>
  <data name="Counterparties" xml:space="preserve">
    <value>Counterparties</value>
  </data>
  <data name="MultiContractOriginalSignedDialogTitle" xml:space="preserve">
    <value>TODO</value>
  </data>
  <data name="MultiContractOriginalSignedDialogText" xml:space="preserve">
    <value>TODO</value>
  </data>
  <data name="MultiContractOriginalSignedDialogSignButtonTitle" xml:space="preserve">
    <value>TODO</value>
  </data>
  <data name="SendButton" xml:space="preserve">
    <value>TODO</value>
  </data>
  <data name="NoVersionsInContract" xml:space="preserve">
    <value>TODO</value>
  </data>
  <data name="EmptyRequiredProperty" xml:space="preserve">
    <value>TODO</value>
  </data>
  <data name="SendApprovalError" xml:space="preserve">
    <value>TODO</value>
  </data>
  <data name="SendIMSDialogMessage" xml:space="preserve">
    <value>TODO</value>
  </data>
  <data name="SendToIMSNotAccessRight" xml:space="preserve">
    <value>TODO</value>
  </data>
  <data name="EmptyContactMessage" xml:space="preserve">
    <value>TODO</value>
  </data>
</root>